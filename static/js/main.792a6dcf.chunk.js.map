{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","contactChek","contacts","props","namesIsIn","reduce","acc","contact","numbersIsIn","includes","alert","handleSubmit","preventDefault","onSubmit","this","type","placeholder","onChange","Component","ContactList","onDeleteContact","map","id","onClick","Filter","App","filter","addContact","uuidv4","changeFilter","event","getVisibleContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.792a6dcf.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    contactChek = () => {\r\n        const { name, number } = this.state;\r\n        const { contacts } = this.props;\r\n        const namesIsIn = contacts.reduce(\r\n            (acc, contact) => [...acc, contact.name],\r\n            [],\r\n        );\r\n        const numbersIsIn = contacts.reduce(\r\n            (acc, contact) => [...acc, contact.number],\r\n            [],\r\n        );\r\n\r\n        if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\r\n            alert(`${name}${number} is already in contacts`);\r\n        }\r\n\r\n        if (name === '' || number === '') {\r\n            alert('Enter all data, please');\r\n        }\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { name, number } = this.state;\r\n\r\n        e.preventDefault();\r\n        this.setState({ name: '', number: '' });\r\n        if (this.contactChek()) {\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit(name, number);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} >\r\n                <label >\r\n                    Name:\r\n          <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        placeholder=\"enter name\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    Number:\r\n          <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        placeholder=\"enter number\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" >\r\n                    Add contact\r\n        </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul >\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} >\r\n                    <p >\r\n                        {name}: {number}\r\n                    </p>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => onDeleteContact(id)}\r\n                    >\r\n                        Delete\r\n          </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n};","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label>\r\n            Find contacts by name:\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: '',\r\n    };\r\n\r\n    addContact = (name, number) => {\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [contact, ...contacts],\r\n        }));\r\n    };\r\n\r\n    changeFilter = event => {\r\n        this.setState({ filter: event.currentTarget.value });\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { filter, contacts } = this.state;\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { filter, contacts } = this.state;\r\n        const visibleContacts = this.getVisibleContacts();\r\n        return (\r\n            <>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm onSubmit={this.addContact} contacts={contacts} />\r\n                <h2>Contacts</h2>\r\n                <Filter value={filter} onChange={this.changeFilter} />\r\n                <ContactList\r\n                    contacts={visibleContacts}\r\n                    onDeleteContact={this.deleteContact}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}